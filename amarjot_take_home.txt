TAKE HOME EXAM
AMARJOT SINGH
100280797

1. Research and write about 2 paragraphs describing how you could use the AWS tools SNS and SQS to aide in handling messages between services in a microservices architecture.

Answer- AWS SNS and SQS can be used as fanout model to do multiple tasks asynchroneusly. An SNS topic can be created to whom, various subscribers(SQS) can be registered. As SNS is point-to-point communication, other AWS services can listen to that queue without being available all the time and can be language agnostic.
For example:
We are creating an online pizza ordering chatbot, which takes order from the customers, process payment and deliver pizza to their home.
What we can do is implement a chatbot with the help of AWS Lex. On fulfilment of Intent we can trigger a lambda function, which in turn Publish message to SNS topic to whom three SQS are listening.These SQS can be connected to other services – baking, database, delivery,customer notification- which can further connects to another services for ordering more ingredients from different suppliers through SNS and SQS.
Lambda => SNS   =>  SQS => notify customer
		       => SQS =>  delivery service
		       => SQS => stock and inventory => SNS => SQS => order Supplies


2. Research two alternative frameworks to the Serverless framework that we looked at in class. These should be frameworks for working with microservices and serverless(the architecture not the framework). Write about 2 paragraphs on each of them. What do they offer, if anything that is different from the Serverless framework...?

Answer -

APEX

Apex is serverless architecture which lets you build, manage and deploy AWS lambda functions with ease.

Features:
Easy AWS credentials setup with profile flag, environment variables, project configuration and via IAM roles.
Use of Minimum IAM Policy.
Supports autocompletion of function name.
Supports multiple environment and symlinks.
Easy to invoke, deploy and manage functions.
Generate logs for functions.
Support alias and rollback to previous versions.
Support use of environment variables.
Helps to manage infrastructure.

Difference from Serverless
Doesn’t support auto scaling.
Not provider agnostic.
Doesn’t support python.


SHEEP

A framework to built javascript API in AWS.

Features:
Uses AWS credentials from cli.
Only upload changed code – build artifacts
Install as a package in npm and can be configured in package.json
Supports different development environment.
By default uses webpack for build process, but can be configured
Simple commands to create projects and create end points for the API
Single line command to deploy.
 
Difference from serverless
Doesn’t support other cloud services providers.
Doesn’t support profiles in aws credentials.
Doesn’t have autoscaling feature.
Not provider agnostic


SMALL PROJECT

1. A services that adds all of your audio files in an S3 bucket to a DynamoDB database.

Answer - 

sudo serverless invoke --function insertfile --log --data=' { "fileurl" : "http://www.ohchr.org/EN/UDHR/Documents/UDHR_Translations/eng.pdf", "key" : "document12.pdf" } '

This function takes a url from internet and post that file into S3 bucket and dynamoDb.



2. A service that allows a user to search for a song(the name of the file) or returns a list of all of the songs(files) you have in your S3 bucket

Answer - 

List all the files inside the bucket.
sudo serverless invoke --function getfile –log

Get the specific file inside the bucket.
sudo serverless invoke --function getfile --log --data=' { "key" : "document10.pdf" } '



3.Create a playlist and insert into dynamodb

Answer -

sudo serverless invoke --function createplaylist --log --data=' { "playlist": 	"myplaylist" , "key" : "document10.pdf" } '

Function checks file inside the common bucket, if it is present their, it insert 	file name(primary_key) in new table with playlist name.

